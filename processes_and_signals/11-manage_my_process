#!/usr/bin/env bash
# This script manages itself, allowing it to be started, stopped, and restarted, and writes "I am alive!" to /tmp/my_process every 2 seconds indefinitely.

PROCESS_NAME="manage_my_process"
PID_FILE="/var/run/my_process.pid"

# Function to check if the process is running
is_running() {
    if [ -f "$PID_FILE" ]; then
        PID=$(cat "$PID_FILE")
        if [ -n "$PID" ] && ps -p "$PID" > /dev/null 2>&1; then
            return 0
        else
            rm -f "$PID_FILE"
            return 1
        fi
    else
        return 1
    fi
}

# Function to start the process
start_process() {
    if is_running; then
        echo "$PROCESS_NAME is already running."
    else
        nohup "$0" run &> /dev/null &
        echo $! > "$PID_FILE"
        echo "$PROCESS_NAME started"
    fi
}

# Function to stop the process
stop_process() {
    if is_running; then
        kill "$(cat "$PID_FILE")"
        rm -f "$PID_FILE"
        echo "$PROCESS_NAME stopped"
    else
        echo "$PROCESS_NAME is not running."
    fi
}

# Function to restart the process
restart_process() {
     if is_running; then
        kill "$(cat "$PID_FILE")"
        rm -f "$PID_FILE"
     fi
       if is_running; then
            
        nohup "$0" run &> /dev/null &
        echo $! > "$PID_FILE"
           fi  
  echo "manage_my_process restarted"
}
# Function to run the process
run_process() {
    while true; do
        echo "I am alive!" >> /tmp/my_process
        sleep 2
    done
}

# Check positional parameters and execute the corresponding function
case "$1" in
    start)
        start_process
        ;;
    stop)
        stop_process
        ;;
    restart)
        restart_process
        ;;
    run)
        run_process
        ;;
    *)
        echo "Usage: $manage_my_process {start|stop|restart}"
        exit 1
        ;;
esac
